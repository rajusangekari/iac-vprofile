name : "Vprofile IAC"
on:
  puch:
  branches:
    - main
    - stage
    paths:
      - terraform/**
  pull_request:
    branches:
     - main
    paths:
      - terraform/**
      
env:
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
 AWS_REGION: us-east-1
 EKS_CLUSTER: vprofile-eks
 
jobs:
   terraform:
     name: "apply terraform code changes"
     runs-on: ubuntu-latest
     defaults:
       run:
         shell: bash
         working-directory: ./terraform

     steps:
       - name: Checkout source code
         uses: actions/checkouts@v4

       - name: Setup Terraform with specified version on the runner
         uses: hasicorp/setup-terraform@v2
         # with:
         # terraform_version: 1.6.3

       - name: Terraform init
         id: Init
         run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

       - name: Terraform format
         id: fmt
         run: terraform fmt -check

       - name: Terraform validate
         id: validate
         run: terraform validate

       - name: Terraform plan
         id: plan
         run: terraform plan -no-color -input=false -out planfile
         continue-on-error: true

       - name: Terraform plan status
         if: steps.plan.outcome == "failure"
         run: exit 1

       - name: Terraform apply
         id: apple
         if: github.ref == 'refs/heads/main' && github.event_name == 'puch'
         run: terraform apply -auto-approve -input=false -parallelelism=1 planfile

       - name: Configure aws credencials
         uses: aws-actions/configure-aws-credencilas@v1
         with: 
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
           aws-secrets-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
           aws-region: ${{ env.AWS_REGION }}

       -  name: get qube config file
          id: getconfig
          if: steps.apple.outcome == "success"
          run: aws aks -update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}

       - name: Install Ingress controller
         if: steps.apple.outcome == 'sucess' && steps.getconfig.outcome == 'sucess'
         run: kubectl apply -f httpl://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
         







